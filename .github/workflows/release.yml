name: Upload APK (Release)

on:
  push:
    branches:
      - master

jobs:

  verify-version:
    name: Verify Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: .\gradlew -q printVersionName
      - name: Test snapshot
        run: if [[ "${{ steps.get_version.outputs.VERSION }}" == *"-SNAPSHOT" ]]; then exit 1; else exit 0; fi
      - name: Get release
        id: get_release
        run: echo ::set-output name=RELEASE_HTTP_CODE::$(curl -s -o out.html -w '%{http_code}'  https://github.com/Thomah/Momix/releases/tag/${{ steps.get_version.outputs.VERSION }};)
      - name: Test release existence
        run: if [[ "${{ steps.get_release.outputs.RELEASE_HTTP_CODE }}" -eq "200" ]]; then exit 1; else exit 0; fi

  upload-apk:
    name: Upload APK
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Release Android APK
      run: ./.release/release_android.sh
      env:
        WORKSPACE: ${{ github.workspace }}
        GPG_DECRYPT_PASSPHRASE: ${{ secrets.GPG_DECRYPT_PASSPHRASE }}
        ANDROID_SIGNING_KEYSTORE_PASS: ${{ secrets.ANDROID_SIGNING_KEYSTORE_PASS }}
    - name: Debug
      run: ls -all ${{ github.workspace }}/android/app/build/outputs/apk/release
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v2
      with:
        name: App
        path: ${{ github.workspace }}/android/app/build/outputs/apk/release/app-release.apk

  release:
    needs: [verify-version, upload-apk]
    name: Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Config Git
      run: git config user.email "${{ secrets.GIT_CONFIG_EMAIL }}" && git config user.name "${{ secrets.GIT_CONFIG_NAME }}"
    - run: git tag ${{ needs.verify-version.outputs.version }}
    - run: git push origin ${{ needs.verify-version.outputs.version }}
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.verify-version.outputs.version }}
        release_name: ${{ needs.verify-version.outputs.version }}
        body: |
          Release ${{ needs.verify-version.outputs.version }}
        draft: false
        prerelease: false
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Release Android APK
      run: ./.release/release_android.sh
      env:
        WORKSPACE: ${{ github.workspace }}
        GPG_DECRYPT_PASSPHRASE: ${{ secrets.GPG_DECRYPT_PASSPHRASE }}
        ANDROID_SIGNING_KEYSTORE_PASS: ${{ secrets.ANDROID_SIGNING_KEYSTORE_PASS }}
    - name: Upload APK
      id: upload-apk
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk
        asset_name: momix.apk
        asset_content_type: application/vnd.android.package-archive
