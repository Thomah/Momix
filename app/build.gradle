apply plugin: 'com.android.application'

Properties keys = new Properties()
def propsFile = rootProject.file('key.properties')
if (propsFile.exists()) {
    keys.load(new FileInputStream(propsFile))
    keys.each { prop ->
        project.ext.set(prop.key, prop.value)
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "fr.thomah.momix"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    if (propsFile.exists()) {
        signingConfigs {
            release {
                storeFile file(project.storeFile)
                storePassword project.storePassword
                keyAlias project.keyAlias
                keyPassword project.keyPassword
                v1SigningEnabled true
                v2SigningEnabled true
            }
        }
        buildTypes {
            release {
                signingConfig signingConfigs.release
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task printVersionName {
    doLast {
        println android.defaultConfig.versionName
    }
}